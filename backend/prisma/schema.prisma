generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id            Int       @id @default(autoincrement())
  username      String    @unique @db.VarChar(50)
  password_hash String    @db.VarChar(255)
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  updated_at    DateTime? @default(now()) @db.Timestamp(6)

  refresh_tokens refresh_tokens[]
  accounts accounts[]
}

model accounts {
  id          Int       @id @default(autoincrement())
  user_id     Int       @db.Integer
  name        String    @db.VarChar(100)
  type        String    @db.VarChar(50)
  balance     Decimal   @default(0.0) @db.Decimal(10, 2)
  limit       Decimal?  @default(0.0) @db.Decimal(10, 2)
  created_at  DateTime? @default(now()) @db.Timestamp(6)
  updated_at  DateTime? @default(now()) @db.Timestamp(6)

  user users @relation(fields: [user_id], references: [id])
  transactions transactions[] // Transactions where this account is the source

  destinationTransactions transactions[] @relation("DestinationAccount") 
}


model transactions {
  id          Int       @id @default(autoincrement())
  account_id  Int       @db.Integer
  vendor      String?   @db.VarChar(100)
  amount      Decimal   @db.Decimal(10, 2)
  type        String    @db.VarChar(50)
  category    String?   @db.VarChar(100)
  date        DateTime? @default(now()) @db.Timestamp(6)
  accountDestination Int? @db.Integer

  account accounts @relation(fields: [account_id], references: [id])
  destinationAccount accounts? @relation("DestinationAccount", fields: [accountDestination], references: [id])
}

model refresh_tokens {
  id        Int       @id @default(autoincrement())
  user_id   Int       @db.Integer
  token     String    @unique @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
  expires_at DateTime @db.Timestamp(6)

  user users @relation(fields: [user_id], references: [id])
}