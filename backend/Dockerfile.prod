# syntax=docker/dockerfile:1.4

###################################
# Build Shared
FROM node:22.16.0 AS shared-build
WORKDIR /
COPY --from=root tsconfig.json tsconfig.json

WORKDIR /shared
COPY --from=shared . .

RUN npm install
RUN npm run build

###################################
# Build Backend
FROM node:22.16.0 AS backend-build
WORKDIR /backend

COPY --from=root tsconfig.json /tsconfig.json
COPY --from=shared-build /shared /shared
COPY . .

RUN npm install
RUN npm run build  

###################################
# Runtime image
FROM node:22.16.0 AS runtime
WORKDIR /app

# Copy only runtime artifacts
COPY --from=backend-build /backend/dist ./dist
COPY --from=shared-build /shared/dist ../shared/dist

# Copy backend’s package.json + lockfile to install only prod‑deps
COPY package*.json ./
RUN npm install --production

WORKDIR /shared
COPY --from=shared-build /shared/package*.json ./
RUN npm install --production

WORKDIR /app
COPY --from=backend-build /backend/prisma ./prisma
RUN npx prisma generate

EXPOSE 3001
CMD ["sh", "-c", "npx prisma migrate deploy && node dist/main"]
